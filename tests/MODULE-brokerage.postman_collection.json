{
	"info": {
		"_postman_id": "4bcf333f-9a63-4336-9594-878773a82995",
		"name": "MODULE: Brokerage copy",
		"description": "Brokerage API:\n\n- Brokerage order API\n- Brokerage security API\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tests",
			"item": [
				{
					"name": "_Test session",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5613bab9-009b-4462-80ca-f5bd2c27989e",
								"exec": [
									"//reset global variables for controling execution flow",
									"eval(globals.cleanup)();",
									"//clear list of executed TestRail tests",
									"pm.environment.set(\"testRailTestsInRun\",\"\");   ",
									"",
									"//specify list of tests to be executed in exact order",
									"//const testsScope = \"Full\"; [Full|Core|Full+TestRail]",
									"let testsScope = data.testsScope;",
									"//console.log(testsScope); ",
									"",
									"switch(testsScope) {",
									"    case \"Full\":",
									"        var testSession = [",
									"            \"List securities (C43995762)\",",
									"            \"Display security by securityNumber (C43995801)\",",
									"            \"List trading places (C43995818)\",",
									"            \"List listings (C43995811)\",",
									"            \"Display listing by listing ID (C43995816)\"",
									"            ]; ",
									"        break;",
									"    case \"Core\":",
									"        var testSession = []; ",
									"        break;",
									"    case \"TestRailClean\":        ",
									"        var testSession = [",
									"            \"_Test session close\"",
									"            ]; ",
									"        break;",
									"    default:",
									"        throw new Error(\"No tests selected for execution!\")",
									"}        ",
									"    ",
									"// Session initiate from PrS using eval()",
									"eval(globals.sessionInit)(testSession, \"testSession\");",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a8d89c55-a197-4bba-8d02-e5e81c58c79c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "httpbin.org/uuid",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "List listings (C43995811)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3bf0288b-49c7-4b83-9cb9-bd90f88d4853",
								"exec": [
									"//var testRailTestCases = \"C43995811\"",
									"var testRailTestCases = eval(globals.extractTestCaseIDFromRequestName)();",
									"//console.log(\"TC ID extracted from request name: \" + testRailTestCases);",
									"eval(globals.testsExecuted)(testRailTestCases);",
									"",
									"var requestsToRun = [",
									"        \"Get listings\"",
									"    ]; ",
									"    pm.globals.set(\"_tr_Get listings\",testRailTestCases);",
									"",
									"//specify related TestRail tests",
									"pm.globals.set(\"testRailTestCases\",testRailTestCases);",
									"",
									"// Session initiate from PrS using eval()",
									"eval(globals.sessionInit)(requestsToRun, \"requestsToRun\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "httpbin.org/uuid",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display listing by listing ID (C43995816)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b9bc4495-a6f0-46ac-8545-7470d7df11ce",
								"exec": [
									"//testRailTestCases = \"C43995816\"",
									"var testRailTestCases = eval(globals.extractTestCaseIDFromRequestName)();",
									"eval(globals.testsExecuted)(testRailTestCases);",
									"",
									"var requestsToRun = [",
									"        \"Get listings\",",
									"        \"Get listing by listing ID\"",
									"    ]; ",
									"    pm.globals.set(\"_tr_Get listings\",\"[precondition]\");",
									"    pm.globals.set(\"_tr_Get listing by listing ID\", testRailTestCases);",
									"",
									"//specify related TestRail tests",
									"pm.globals.set(\"testRailTestCases\",testRailTestCases);",
									"",
									"// Session initiate from PrS using eval()",
									"eval(globals.sessionInit)(requestsToRun, \"requestsToRun\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "httpbin.org/uuid",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "List securities (C43995762)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5613bab9-009b-4462-80ca-f5bd2c27989e",
								"exec": [
									"//var testRailTestCases = \"C43995762\"",
									"var testRailTestCases = eval(globals.extractTestCaseIDFromRequestName)();",
									"//console.log(\"TC ID extracted from request name: \" + testRailTestCases);",
									"eval(globals.testsExecuted)(testRailTestCases);",
									"",
									"var requestsToRun = [",
									"        \"Get securities\"",
									"    ]; ",
									"    pm.globals.set(\"_tr_Get securities\",testRailTestCases);",
									"",
									"//specify related TestRail tests",
									"pm.globals.set(\"testRailTestCases\",testRailTestCases);",
									"",
									"// Session initiate from PrS using eval()",
									"eval(globals.sessionInit)(requestsToRun, \"requestsToRun\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a8d89c55-a197-4bba-8d02-e5e81c58c79c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "httpbin.org/uuid",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "List trading places (C43995818)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5613bab9-009b-4462-80ca-f5bd2c27989e",
								"exec": [
									"//var testRailTestCases = \"C43995818\"",
									"var testRailTestCases = eval(globals.extractTestCaseIDFromRequestName)();",
									"//console.log(\"TC ID extracted from request name: \" + testRailTestCases);",
									"eval(globals.testsExecuted)(testRailTestCases);",
									"",
									"var requestsToRun = [",
									"        \"Get trading places\"",
									"    ]; ",
									"    pm.globals.set(\"_tr_Get trading places\",testRailTestCases);",
									"",
									"//specify related TestRail tests",
									"pm.globals.set(\"testRailTestCases\",testRailTestCases);",
									"",
									"// Session initiate from PrS using eval()",
									"eval(globals.sessionInit)(requestsToRun, \"requestsToRun\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a8d89c55-a197-4bba-8d02-e5e81c58c79c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "httpbin.org/uuid",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display security by securityNumber (C43995801)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5613bab9-009b-4462-80ca-f5bd2c27989e",
								"exec": [
									"//testRailTestCases = \"C43995801\"",
									"var testRailTestCases = eval(globals.extractTestCaseIDFromRequestName)();",
									"eval(globals.testsExecuted)(testRailTestCases);",
									"",
									"var requestsToRun = [",
									"        \"Get securities\",",
									"        \"Get security by securityNumber\"",
									"    ]; ",
									"    pm.globals.set(\"_tr_Get securities\",\"[precondition]\");",
									"    pm.globals.set(\"_tr_Get security by securityNumber\", testRailTestCases);",
									"",
									"//specify related TestRail tests",
									"pm.globals.set(\"testRailTestCases\",testRailTestCases);",
									"",
									"// Session initiate from PrS using eval()",
									"eval(globals.sessionInit)(requestsToRun, \"requestsToRun\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a8d89c55-a197-4bba-8d02-e5e81c58c79c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "httpbin.org/uuid",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"uuid"
							]
						}
					},
					"response": []
				},
				{
					"name": "_Test session close",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5613bab9-009b-4462-80ca-f5bd2c27989e",
								"exec": [
									"var requestsToRun = ",
									"    [",
									"        \"Clean TestRail Run\"",
									"    ]; ",
									"",
									"// Session initiate from PrS using eval()",
									"eval(globals.sessionInit)(requestsToRun, \"requestsToRun\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a8d89c55-a197-4bba-8d02-e5e81c58c79c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "httpbin.org/uuid",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"uuid"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Requests",
			"item": [
				{
					"name": "Get securities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81b56885-cb8b-4a7b-866e-ba015f333cbc",
								"exec": [
									"// Execute standard tests from PrS using eval()\r",
									"eval(globals.commonTests)();\r",
									"\r",
									"pm.test(pm.globals.get(\"_tr_\" + request.name) + \" List of securities is retrieved and response schema is validated\", function () {\r",
									"\r",
									"    var securitiesSchema = pm.environment.get(\"securitiesSchema\");\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.test(\"Status 200 OK is displayed\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"    \r",
									"    pm.test(\"Response schema is correct\", () => {\r",
									"        //tv4.validate(jsonData, securitiesSchema, false, true);\r",
									"        pm.expect(tv4.validate(jsonData, securitiesSchema)).to.be.true;\r",
									"    }); \r",
									"    \r",
									"    pm.response.to.have.status(200)\r",
									"    && pm.expect(tv4.validate(jsonData, securitiesSchema)).to.be.true;\r",
									"});\r",
									"\r",
									"// store last securityNumber as environment variable\r",
									"if (pm.response.code === 200) {\r",
									"    var jsonData = JSON.parse(responseBody)._embedded;\r",
									"    pm.environment.set(\"_tmp_securityNumber\",jsonData.securities[0].securityNumber);\r",
									"} else {\r",
									"    pm.environment.unset(\"_tmp_securityNumber\");\r",
									"}\r",
									"\r",
									"\r",
									"// Session navigate from PrS using eval()\r",
									"eval(globals.sessionNavigate)();\r",
									"\r",
									"// Reset reference to TR test cases\r",
									"pm.globals.unset(\"_tr_\" + request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d873ed76-b449-4069-8385-ae5f6ad05400",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, application/hal+json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{environment}}/brokerage/securities/{{tenant}}/v1/securities",
							"host": [
								"{{environment}}"
							],
							"path": [
								"brokerage",
								"securities",
								"{{tenant}}",
								"v1",
								"securities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get listings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "590da4a5-4cbe-4116-bedc-ae2fda9b4dec",
								"exec": [
									"eval(globals.commonTests)();",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(pm.globals.get(\"_tr_\" + request.name) + \" Listings are returns and all assertions passed\", function (){",
									"",
									"var listingsSchema = pm.environment.get(\"listingsSchema\");",
									"pm.test(\"Status 200 OK is displayed\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"    ",
									"pm.test(\"Response schema is correct\", () => {",
									"        //tv4.validate(jsonData, securitiesSchema, false, true);",
									"    pm.expect(tv4.validate(jsonData, listingsSchema)).to.be.true;",
									"}); ",
									"    ",
									"pm.response.to.have.status(200)",
									"&& pm.expect(tv4.validate(jsonData, listingsSchema)).to.be.true;    ",
									"/*pm.test(\"Validate schema\", () => {",
									"    jsonData._embedded.listings.forEach(function(obj){",
									"       pm.expect(obj).to.have.property(\"id\");",
									"       pm.expect(obj).to.have.property(\"fixAt\");",
									"       pm.expect(obj).to.have.property(\"rate\");",
									"       pm.expect(obj).to.have.property(\"roundLot\");",
									"       pm.expect(obj).to.have.property(\"ticker\");",
									"   });   ",
									"});*/",
									"",
									"});",
									"",
									"/*pm.test(\"get listing ID\", () => {",
									"    var ticker=\"ROG-T5\";",
									"    jsonData._embedded.listings.forEach(function(obj){",
									"       if(obj.ticker===ticker){",
									"            pm.globals.set('listing_ID', obj.id);",
									"       }",
									"   });   ",
									"});*/",
									"",
									"if (pm.response.code === 200) {",
									"    pm.environment.set(\"tmp_listing_ID\",jsonData._embedded.listings[0].id);",
									"} else {",
									"    pm.environment.unset(\"tmp_listing_ID\");",
									"}",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "bearer",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{environment}}/brokerage/securities/{{tenant}}/v1/listings",
							"host": [
								"{{environment}}"
							],
							"path": [
								"brokerage",
								"securities",
								"{{tenant}}",
								"v1",
								"listings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get listing by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17b7e3b9-73f9-424c-bf53-aa31004f3747",
								"exec": [
									"eval(globals.commonTests)();",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.test(pm.globals.get(\"_tr_\" + request.name) + \" Listings are returns and all assertions passed\", function (){",
									" pm.test(\"Main elements are present\", () => {",
									"  pm.expect(jsonData).to.have.property(\"id\");",
									"  pm.expect(jsonData).to.have.property(\"ticker\");",
									"  pm.expect(jsonData).to.have.property(\"rate\");",
									"  pm.expect(jsonData).to.have.property(\"fixAt\");",
									"  pm.expect(jsonData).to.have.property(\"roundLot\");",
									" });",
									"",
									" pm.test(\"ID is correct\", () => {",
									"  pm.expect(jsonData.id).to.be.eql(pm.environment.get(\"tmp_listing_ID\"));",
									" });",
									" ",
									"  pm.expect(jsonData).to.have.property(\"id\")&&",
									"  pm.expect(jsonData).to.have.property(\"ticker\")&&",
									"  pm.expect(jsonData).to.have.property(\"rate\")&&",
									"  pm.expect(jsonData).to.have.property(\"fixAt\")&&",
									"  pm.expect(jsonData).to.have.property(\"roundLot\")&&",
									"  pm.expect(jsonData.id).to.be.eql(pm.environment.get(\"tmp_listing_ID\"));",
									" ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer{{token}}",
								"type": "text"
							},
							{
								"key": "accept",
								"value": "application/json, application/hal+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{environment}}/brokerage/securities/{{tenant}}/v1/listings/{{tmp_listing_ID}}",
							"host": [
								"{{environment}}"
							],
							"path": [
								"brokerage",
								"securities",
								"{{tenant}}",
								"v1",
								"listings",
								"{{tmp_listing_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trading places",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81b56885-cb8b-4a7b-866e-ba015f333cbc",
								"exec": [
									"// Execute standard tests from PrS using eval()\r",
									"eval(globals.commonTests)();\r",
									"\r",
									"pm.test(pm.globals.get(\"_tr_\" + request.name) + \" List of trading places is retrieved and response schema is validated\", function () {\r",
									"\r",
									"    var tradingPlacesSchema = pm.environment.get(\"tradingPlacesSchema\");\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.test(\"Status 200 OK is displayed\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"    \r",
									"    pm.test(\"Response schema is correct\", () => {\r",
									"        pm.expect(tv4.validate(jsonData, tradingPlacesSchema)).to.be.true;\r",
									"    }); \r",
									"    \r",
									"    pm.response.to.have.status(200)\r",
									"    && pm.expect(tv4.validate(jsonData, tradingPlacesSchema)).to.be.true;\r",
									"});\r",
									"\r",
									"// store tradingPlaceId as environment variable\r",
									"if (pm.response.code === 200) {\r",
									"    var jsonData = JSON.parse(responseBody)._embedded;\r",
									"    pm.environment.set(\"_tmp_tradingPlaceId\",jsonData.tradingPlaces[0].id);\r",
									"} else {\r",
									"    pm.environment.unset(\"_tmp_tradingPlaceId\");\r",
									"}\r",
									"\r",
									"\r",
									"// Session navigate from PrS using eval()\r",
									"eval(globals.sessionNavigate)();\r",
									"\r",
									"// Reset reference to TR test cases\r",
									"pm.globals.unset(\"_tr_\" + request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d873ed76-b449-4069-8385-ae5f6ad05400",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, application/hal+json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{environment}}/brokerage/securities/{{tenant}}/v1/tradingplaces",
							"host": [
								"{{environment}}"
							],
							"path": [
								"brokerage",
								"securities",
								"{{tenant}}",
								"v1",
								"tradingplaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get security by securityNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe77c6af-55b9-481e-a5e0-2616fb531b6a",
								"exec": [
									"// Execute standard tests from PrS using eval()\r",
									"eval(globals.commonTests)();\r",
									"\r",
									"pm.test(pm.globals.get(\"_tr_\" + request.name) + \" Security is retrieved by securityNumber and response schema is validated\", function () {\r",
									"\r",
									"    var securitySchema = pm.environment.get(\"securitySchema\");\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    var jsonDataEmbed = JSON.parse(responseBody)._embedded;\r",
									"    \r",
									"    pm.test(\"Status 200 OK is displayed\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"    \r",
									"    pm.test(\"Response schema is correct\", () => {\r",
									"        pm.expect(tv4.validate(jsonData, securitySchema)).to.be.true;\r",
									"    });\r",
									"    \r",
									"    pm.test(\"Single security matched with securityNumber is in response\", function () {\r",
									"        //TODO: check securityNumber too\r",
									"        pm.expect(jsonDataEmbed.securities.length).to.be.eql(1) &&\r",
									"        pm.expect(jsonDataEmbed.securities[0].securityNumber).to.be.eql(pm.environment.get(\"_tmp_securityNumber\"));\r",
									"    });\r",
									"\r",
									"    pm.response.to.have.status(200)\r",
									"    && pm.expect(tv4.validate(jsonData, securitySchema)).to.be.true\r",
									"    && pm.expect(jsonDataEmbed.securities.length).to.be.eql(1)\r",
									"    && pm.expect(jsonDataEmbed.securities[0].securityNumber).to.be.eql(pm.environment.get(\"_tmp_securityNumber\"));\r",
									"});\r",
									"\r",
									"// Session navigate from PrS using eval()\r",
									"eval(globals.sessionNavigate)();\r",
									"\r",
									"// Reset reference to TR test cases\r",
									"pm.globals.unset(\"_tr_\" + request.name);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2ae3901f-9d1d-4fd6-bd4a-262c16bea9b3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, application/hal+json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{environment}}/brokerage/securities/{{tenant}}/v1/securities?securityNumber={{_tmp_securityNumber}}",
							"host": [
								"{{environment}}"
							],
							"path": [
								"brokerage",
								"securities",
								"{{tenant}}",
								"v1",
								"securities"
							],
							"query": [
								{
									"key": "securityNumber",
									"value": "{{_tmp_securityNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Clean TestRail Run",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5d00dc8-f552-48c0-9a1c-2510df583464",
								"exec": [
									"// Prepare list of TestRail tests for 'Clean TestRail Run' request",
									"//var execTests = pm.globals.get(\"testRailTestsInRun\");",
									"var execTests = data.executedTests;",
									"console.log(\"TestRail, tests executed in last run: \" + execTests);",
									"execTests = execTests.replace(/C/g, \"\");",
									"//console.log(\"TestRail, first cleanup: \" + execTests);",
									"execTests = execTests.replace(/ /g, \", \");",
									"//console.log(\"TestRail, second cleanup: \" + execTests);",
									"execTests = execTests.replace(/,,/g, \",\");",
									"pm.globals.set(\"testRailTestsInRun\", execTests); ",
									"",
									"var array = JSON.parse(\"[\" + execTests + \"]\"); //convert string to array",
									"for(let i = 0; i < 10; i++){",
									"    let runId = JSON.parse(responseBody)[i].id;",
									"    let runName = JSON.parse(responseBody)[i].name;",
									"    let runSuiteId = JSON.parse(responseBody)[i].suite_id;",
									"    if (runName === \"Postman API Tests\") { //determine proper run",
									"        //console.log(runId);   ",
									"        console.log(\"TestRail run '\" + runId + \"' updating for tests: \" + execTests);",
									"        pm.sendRequest({",
									"            url: \"https://testrail.ebs.crealogix.net/index.php?/api/v2/update_run/\" + runId,",
									"            method: \"POST\",",
									"            header: {",
									"                \"Authorization\": \"Basic bWlsYW4ua2FyYWRlZ2xpY0BjcmVhbG9naXguY29tOlNTQ25hcG9saTEyMzQ1Njc4OQ==\",",
									"                \"Content-Type\": \"application/json\"",
									"            },",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({ include_all: false, case_ids: array })",
									"        \t}",
									"        });",
									"        break;",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "22f2990b-adb1-4668-a6e9-92884e953577",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "SSCnapoli123456789",
									"type": "string"
								},
								{
									"key": "username",
									"value": "milan.karadeglic@crealogix.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "content-type",
								"value": "application/json; charset=UTF-8"
							},
							{
								"key": "accept",
								"value": "application/json, application/hal+json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://testrail.ebs.crealogix.net/index.php?/api/v2/get_runs/8",
							"protocol": "https",
							"host": [
								"testrail",
								"ebs",
								"crealogix",
								"net"
							],
							"path": [
								"index.php"
							],
							"query": [
								{
									"key": "/api/v2/get_runs/8",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "cc52a1da-bedb-499b-9889-bd5c4a2f665c",
				"type": "text/javascript",
				"exec": [
					"//************************************************************************************************",
					"// variable initialization************************************************************************",
					"//************************************************************************************************",
					"var test = pm.environment.get(\"testRailTestsInRun\");",
					"if( !test) {",
					"    pm.environment.set(\"testRailTestsInRun\",\"\");",
					"}",
					"",
					"//************************************************************************************************",
					"// connect to TestRail ***************************************************************************",
					"//************************************************************************************************",
					"pm.globals.set(\"TESTRAIL_DOMAIN\",\"testrail.ebs.crealogix.net\");",
					"pm.globals.set(\"TESTRAIL_USERNAME\",\"milan.karadeglic@crealogix.com\"); ",
					"pm.globals.set(\"TESTRAIL_APIKEY\",\"Q4MlDw1e70Kxh1g1YPq9-Dg0abDWer.pSWcVWcxO4\");",
					"pm.globals.set(\"TESTRAIL_PROJECTID\",8); ",
					"pm.globals.set(\"TESTRAIL_TITLE\",\"Postman API Tests\");",
					"",
					"//************************************************************************************************",
					"// Schema for 'securities' ***********************************************************************",
					"// created via https://jsonschema.net/ ***********************************************************",
					"//************************************************************************************************",
					"const securitiesSchema = ",
					"{",
					"  \"definitions\": {},",
					"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
					"  \"$id\": \"http://example.com/root.json\",",
					"  \"type\": [",
					"    \"object\",",
					"    \"null\"",
					"  ],",
					"  \"required\": [",
					"    \"page\",",
					"    \"_embedded\"",
					"  ],",
					"  \"properties\": {",
					"    \"page\": {",
					"      \"$id\": \"#/properties/page\",",
					"      \"type\": [",
					"        \"object\",",
					"        \"null\"",
					"      ],",
					"      \"required\": [",
					"        \"number\",",
					"        \"size\",",
					"        \"totalElements\",",
					"        \"totalPages\"",
					"      ],",
					"      \"properties\": {",
					"        \"number\": {",
					"          \"$id\": \"#/properties/page/properties/number\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"size\": {",
					"          \"$id\": \"#/properties/page/properties/size\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"totalElements\": {",
					"          \"$id\": \"#/properties/page/properties/totalElements\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"totalPages\": {",
					"          \"$id\": \"#/properties/page/properties/totalPages\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        }",
					"      }",
					"    },",
					"    \"_embedded\": {",
					"      \"$id\": \"#/properties/_embedded\",",
					"      \"type\": [",
					"        \"object\",",
					"        \"null\"",
					"      ],",
					"      \"required\": [",
					"        \"securities\"",
					"      ],",
					"      \"properties\": {",
					"        \"securities\": {",
					"          \"$id\": \"#/properties/_embedded/properties/securities\",",
					"          \"type\": [",
					"            \"array\",",
					"            \"null\"",
					"          ],",
					"          \"items\": {",
					"            \"$id\": \"#/properties/_embedded/properties/securities/items\",",
					"            \"type\": [",
					"              \"object\",",
					"              \"null\"",
					"            ],",
					"            \"required\": [",
					"              \"id\",",
					"              \"isin\",",
					"              \"securityNumber\",",
					"              \"descriptions\",",
					"              \"currencyIsoCode\",",
					"              \"interestFrequency\",",
					"              \"maturityDate\",",
					"              \"maturityRate\",",
					"              \"modifiedDuration\",",
					"              \"optionType\",",
					"              \"orderType\",",
					"              \"rating\",",
					"              \"ratingSource\",",
					"              \"riskCurrencyIsoCode\",",
					"              \"securityValue\",",
					"              \"status\",",
					"              \"strikePrice\",",
					"              \"timeToMaturity\",",
					"              \"tradable\",",
					"              \"tradeUnit\",",
					"              \"tradingRestrictions\",",
					"              \"usAsset\",",
					"              \"withdrawalInterseRate\",",
					"              \"withdrawalInterestPeriod\",",
					"              \"yieldToMaturity\"",
					"            ],",
					"            \"properties\": {",
					"              \"id\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/id\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"isin\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/isin\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"securityNumber\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityNumber\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"descriptions\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions\",",
					"                \"type\": [",
					"                  \"array\",",
					"                  \"null\"",
					"                ],",
					"                \"items\": {",
					"                  \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items\",",
					"                  \"type\": [",
					"                    \"object\",",
					"                    \"null\"",
					"                  ],",
					"                  \"required\": [",
					"                    \"language\",",
					"                    \"description\",",
					"                    \"shortDescription\"",
					"                  ],",
					"                  \"properties\": {",
					"                    \"language\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items/properties/language\",",
					"                      \"type\": [",
					"                        \"string\",",
					"                        \"null\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    },",
					"                    \"description\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items/properties/description\",",
					"                      \"type\": [",
					"                        \"string\",",
					"                        \"null\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    },",
					"                    \"shortDescription\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items/properties/shortDescription\",",
					"                      \"type\": [",
					"                        \"string\",",
					"                        \"null\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    }",
					"                  }",
					"                }",
					"              },",
					"              \"currencyIsoCode\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/currencyIsoCode\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"interestFrequency\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/interestFrequency\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"maturityDate\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/maturityDate\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"maturityRate\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/maturityRate\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"modifiedDuration\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/modifiedDuration\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"optionType\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/optionType\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"orderType\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/orderType\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"rating\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/rating\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"ratingSource\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/ratingSource\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"riskCurrencyIsoCode\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/riskCurrencyIsoCode\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"securityValue\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityValue\",",
					"                \"type\": [",
					"                  \"object\",",
					"                  \"null\"",
					"                ],",
					"                \"required\": [",
					"                  \"data\",",
					"                  \"type\"",
					"                ],",
					"                \"properties\": {",
					"                  \"data\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityValue/properties/data\",",
					"                    \"type\": [",
					"                      \"number\",",
					"                      \"null\"",
					"                    ]",
					"                  },",
					"                  \"type\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityValue/properties/type\",",
					"                    \"type\": [",
					"                      \"string\",",
					"                      \"null\"",
					"                    ],",
					"                    \"pattern\": \"^(.*)$\"",
					"                  }",
					"                }",
					"              },",
					"              \"status\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/status\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"strikePrice\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/strikePrice\",",
					"                \"type\": [",
					"                  \"object\",",
					"                  \"null\"",
					"                ],",
					"                \"required\": [",
					"                  \"currencyIsoCode\",",
					"                  \"value\"",
					"                ],",
					"                \"properties\": {",
					"                  \"currencyIsoCode\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/strikePrice/properties/currencyIsoCode\",",
					"                    \"type\": [",
					"                      \"string\",",
					"                      \"null\"",
					"                    ],",
					"                    \"pattern\": \"^(.*)$\"",
					"                  },",
					"                  \"value\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/strikePrice/properties/value\",",
					"                    \"type\": [",
					"                      \"number\",",
					"                      \"null\"",
					"                    ]",
					"                  }",
					"                }",
					"              },",
					"              \"timeToMaturity\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/timeToMaturity\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"tradable\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/tradable\",",
					"                \"type\": [",
					"                  \"boolean\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"tradeUnit\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/tradeUnit\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"tradingRestrictions\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/tradingRestrictions\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"usAsset\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/usAsset\",",
					"                \"type\": [",
					"                  \"boolean\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"withdrawalInterseRate\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/withdrawalInterseRate\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"withdrawalInterestPeriod\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/withdrawalInterestPeriod\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"yieldToMaturity\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/yieldToMaturity\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              }",
					"            }",
					"          }",
					"        }",
					"      }",
					"    }",
					"  }",
					"};",
					"pm.environment.set(\"securitiesSchema\", securitiesSchema);",
					"",
					"//************************************************************************************************",
					"// Schema for 'security' *************************************************************************",
					"// created via https://jsonschema.net/ ***********************************************************",
					"//************************************************************************************************",
					"const securitySchema = ",
					"{",
					"  \"definitions\": {},",
					"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
					"  \"$id\": \"http://example.com/root.json\",",
					"  \"type\": [",
					"    \"object\",",
					"    \"null\"",
					"  ],",
					"  \"required\": [",
					"    \"page\",",
					"    \"_embedded\"",
					"  ],",
					"  \"properties\": {",
					"    \"page\": {",
					"      \"$id\": \"#/properties/page\",",
					"      \"type\": [",
					"        \"object\",",
					"        \"null\"",
					"      ],",
					"      \"required\": [",
					"        \"number\",",
					"        \"size\",",
					"        \"totalElements\",",
					"        \"totalPages\"",
					"      ],",
					"      \"properties\": {",
					"        \"number\": {",
					"          \"$id\": \"#/properties/page/properties/number\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"size\": {",
					"          \"$id\": \"#/properties/page/properties/size\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"totalElements\": {",
					"          \"$id\": \"#/properties/page/properties/totalElements\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"totalPages\": {",
					"          \"$id\": \"#/properties/page/properties/totalPages\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        }",
					"      }",
					"    },",
					"    \"_embedded\": {",
					"      \"$id\": \"#/properties/_embedded\",",
					"      \"type\": [",
					"        \"object\",",
					"        \"null\"",
					"      ],",
					"      \"required\": [",
					"        \"securities\"",
					"      ],",
					"      \"properties\": {",
					"        \"securities\": {",
					"          \"$id\": \"#/properties/_embedded/properties/securities\",",
					"          \"type\": [",
					"            \"array\",",
					"            \"null\"",
					"          ],",
					"          \"items\": {",
					"            \"$id\": \"#/properties/_embedded/properties/securities/items\",",
					"            \"type\": [",
					"              \"object\",",
					"              \"null\"",
					"            ],",
					"            \"required\": [",
					"              \"id\",",
					"              \"isin\",",
					"              \"securityNumber\",",
					"              \"descriptions\",",
					"              \"currencyIsoCode\",",
					"              \"interestFrequency\",",
					"              \"maturityDate\",",
					"              \"maturityRate\",",
					"              \"modifiedDuration\",",
					"              \"optionType\",",
					"              \"orderType\",",
					"              \"rating\",",
					"              \"ratingSource\",",
					"              \"riskCurrencyIsoCode\",",
					"              \"securityValue\",",
					"              \"status\",",
					"              \"strikePrice\",",
					"              \"timeToMaturity\",",
					"              \"tradable\",",
					"              \"tradeUnit\",",
					"              \"tradingRestrictions\",",
					"              \"usAsset\",",
					"              \"withdrawalInterseRate\",",
					"              \"withdrawalInterestPeriod\",",
					"              \"yieldToMaturity\"",
					"            ],",
					"            \"properties\": {",
					"              \"id\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/id\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"isin\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/isin\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"securityNumber\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityNumber\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"descriptions\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions\",",
					"                \"type\": [",
					"                  \"array\",",
					"                  \"null\"",
					"                ],",
					"                \"items\": {",
					"                  \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items\",",
					"                  \"type\": [",
					"                    \"object\",",
					"                    \"null\"",
					"                  ],",
					"                  \"required\": [",
					"                    \"language\",",
					"                    \"description\",",
					"                    \"shortDescription\"",
					"                  ],",
					"                  \"properties\": {",
					"                    \"language\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items/properties/language\",",
					"                      \"type\": [",
					"                        \"string\",",
					"                        \"null\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    },",
					"                    \"description\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items/properties/description\",",
					"                      \"type\": [",
					"                        \"string\",",
					"                        \"null\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    },",
					"                    \"shortDescription\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/securities/items/properties/descriptions/items/properties/shortDescription\",",
					"                      \"type\": [",
					"                        \"string\",",
					"                        \"null\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    }",
					"                  }",
					"                }",
					"              },",
					"              \"currencyIsoCode\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/currencyIsoCode\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"interestFrequency\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/interestFrequency\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"maturityDate\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/maturityDate\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"maturityRate\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/maturityRate\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"modifiedDuration\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/modifiedDuration\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"optionType\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/optionType\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"orderType\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/orderType\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"rating\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/rating\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"ratingSource\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/ratingSource\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"riskCurrencyIsoCode\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/riskCurrencyIsoCode\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"securityValue\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityValue\",",
					"                \"type\": [",
					"                  \"object\",",
					"                  \"null\"",
					"                ],",
					"                \"required\": [",
					"                  \"data\",",
					"                  \"type\"",
					"                ],",
					"                \"properties\": {",
					"                  \"data\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityValue/properties/data\",",
					"                    \"type\": [",
					"                      \"number\",",
					"                      \"null\"",
					"                    ]",
					"                  },",
					"                  \"type\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/securityValue/properties/type\",",
					"                    \"type\": [",
					"                      \"string\",",
					"                      \"null\"",
					"                    ],",
					"                    \"pattern\": \"^(.*)$\"",
					"                  }",
					"                }",
					"              },",
					"              \"status\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/status\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"strikePrice\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/strikePrice\",",
					"                \"type\": [",
					"                  \"object\",",
					"                  \"null\"",
					"                ],",
					"                \"required\": [",
					"                  \"currencyIsoCode\",",
					"                  \"value\"",
					"                ],",
					"                \"properties\": {",
					"                  \"currencyIsoCode\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/strikePrice/properties/currencyIsoCode\",",
					"                    \"type\": [",
					"                      \"string\",",
					"                      \"null\"",
					"                    ],",
					"                    \"pattern\": \"^(.*)$\"",
					"                  },",
					"                  \"value\": {",
					"                    \"$id\": \"#/properties/_embedded/properties/securities/items/properties/strikePrice/properties/value\",",
					"                    \"type\": [",
					"                      \"number\",",
					"                      \"null\"",
					"                    ]",
					"                  }",
					"                }",
					"              },",
					"              \"timeToMaturity\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/timeToMaturity\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"tradable\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/tradable\",",
					"                \"type\": [",
					"                  \"boolean\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"tradeUnit\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/tradeUnit\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"tradingRestrictions\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/tradingRestrictions\",",
					"                \"type\": \"null\"",
					"              },",
					"              \"usAsset\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/usAsset\",",
					"                \"type\": [",
					"                  \"boolean\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"withdrawalInterseRate\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/withdrawalInterseRate\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"withdrawalInterestPeriod\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/withdrawalInterestPeriod\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"yieldToMaturity\": {",
					"                \"$id\": \"#/properties/_embedded/properties/securities/items/properties/yieldToMaturity\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              }",
					"            }",
					"          }",
					"        }",
					"      }",
					"    }",
					"  }",
					"};",
					"pm.environment.set(\"securitySchema\", securitySchema);",
					"",
					"//************************************************************************************************",
					"// Schema for 'trading places' *******************************************************************",
					"// created via https://jsonschema.net/ ***********************************************************",
					"//************************************************************************************************",
					"const tradingPlacesSchema = ",
					"{",
					"  \"definitions\": {},",
					"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
					"  \"$id\": \"http://example.com/root.json\",",
					"  \"type\": \"object\",",
					"  \"title\": \"The Root Schema\",",
					"  \"required\": [",
					"    \"page\",",
					"    \"_embedded\"",
					"  ],",
					"  \"properties\": {",
					"    \"page\": {",
					"      \"$id\": \"#/properties/page\",",
					"      \"type\": \"object\",",
					"      \"title\": \"The Page Schema\",",
					"      \"required\": [",
					"        \"number\",",
					"        \"size\",",
					"        \"totalElements\",",
					"        \"totalPages\"",
					"      ],",
					"      \"properties\": {",
					"        \"number\": {",
					"          \"$id\": \"#/properties/page/properties/number\",",
					"          \"type\": \"integer\",",
					"          \"title\": \"The Number Schema\",",
					"          \"default\": 0,",
					"          \"examples\": [",
					"            0",
					"          ]",
					"        },",
					"        \"size\": {",
					"          \"$id\": \"#/properties/page/properties/size\",",
					"          \"type\": \"integer\",",
					"          \"title\": \"The Size Schema\",",
					"          \"default\": 0,",
					"          \"examples\": [",
					"            10",
					"          ]",
					"        },",
					"        \"totalElements\": {",
					"          \"$id\": \"#/properties/page/properties/totalElements\",",
					"          \"type\": \"integer\",",
					"          \"title\": \"The Totalelements Schema\",",
					"          \"default\": 0,",
					"          \"examples\": [",
					"            1422",
					"          ]",
					"        },",
					"        \"totalPages\": {",
					"          \"$id\": \"#/properties/page/properties/totalPages\",",
					"          \"type\": \"integer\",",
					"          \"title\": \"The Totalpages Schema\",",
					"          \"default\": 0,",
					"          \"examples\": [",
					"            143",
					"          ]",
					"        }",
					"      }",
					"    },",
					"    \"_embedded\": {",
					"      \"$id\": \"#/properties/_embedded\",",
					"      \"type\": \"object\",",
					"      \"title\": \"The _embedded Schema\",",
					"      \"required\": [",
					"        \"tradingPlaces\"",
					"      ],",
					"      \"properties\": {",
					"        \"tradingPlaces\": {",
					"          \"$id\": \"#/properties/_embedded/properties/tradingPlaces\",",
					"          \"type\": \"array\",",
					"          \"title\": \"The Tradingplaces Schema\",",
					"          \"items\": {",
					"            \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items\",",
					"            \"type\": \"object\",",
					"            \"title\": \"The Items Schema\",",
					"            \"required\": [",
					"              \"id\",",
					"              \"code\",",
					"              \"country\",",
					"              \"descriptions\",",
					"              \"openingTime\",",
					"              \"closingTime\",",
					"              \"lunchTimeStart\",",
					"              \"lunchTimeEnd\",",
					"              \"executionDeadLine\",",
					"              \"onlineTradeAllowed\",",
					"              \"tradingAllowed\"",
					"            ],",
					"            \"properties\": {",
					"              \"id\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/id\",",
					"                \"type\": \"string\",",
					"                \"title\": \"The Id Schema\",",
					"                \"default\": \"\",",
					"                \"examples\": [",
					"                  \"__ID__01239346c88fc7a84c66151b23cddb661cf205afbbf02120f1a8d010724b8167deee4f\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"code\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/code\",",
					"                \"type\": \"string\",",
					"                \"title\": \"The Code Schema\",",
					"                \"default\": \"\",",
					"                \"examples\": [",
					"                  \"DES\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"country\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/country\",",
					"                \"type\": \"string\",",
					"                \"title\": \"The Country Schema\",",
					"                \"default\": \"\",",
					"                \"examples\": [",
					"                  \"GB\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"descriptions\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/descriptions\",",
					"                \"type\": \"array\",",
					"                \"title\": \"The Descriptions Schema\",",
					"                \"items\": {",
					"                  \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/descriptions/items\",",
					"                  \"type\": \"object\",",
					"                  \"title\": \"The Items Schema\",",
					"                  \"required\": [",
					"                    \"shortDescription\",",
					"                    \"fullDescription\",",
					"                    \"language\"",
					"                  ],",
					"                  \"properties\": {",
					"                    \"shortDescription\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/descriptions/items/properties/shortDescription\",",
					"                      \"type\": \"string\",",
					"                      \"title\": \"The Shortdescription Schema\",",
					"                      \"default\": \"\",",
					"                      \"examples\": [",
					"                        \"DES\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    },",
					"                    \"fullDescription\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/descriptions/items/properties/fullDescription\",",
					"                      \"type\": \"string\",",
					"                      \"title\": \"The Fulldescription Schema\",",
					"                      \"default\": \"\",",
					"                      \"examples\": [",
					"                        \"KBC FINANCIAL PRODUCTS\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    },",
					"                    \"language\": {",
					"                      \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/descriptions/items/properties/language\",",
					"                      \"type\": \"string\",",
					"                      \"title\": \"The Language Schema\",",
					"                      \"default\": \"\",",
					"                      \"examples\": [",
					"                        \"EN\"",
					"                      ],",
					"                      \"pattern\": \"^(.*)$\"",
					"                    }",
					"                  }",
					"                }",
					"              },",
					"              \"openingTime\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/openingTime\",",
					"                \"type\": \"null\",",
					"                \"title\": \"The Openingtime Schema\",",
					"                \"default\": null,",
					"                \"examples\": [",
					"                  null",
					"                ]",
					"              },",
					"              \"closingTime\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/closingTime\",",
					"                \"type\": \"null\",",
					"                \"title\": \"The Closingtime Schema\",",
					"                \"default\": null,",
					"                \"examples\": [",
					"                  null",
					"                ]",
					"              },",
					"              \"lunchTimeStart\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/lunchTimeStart\",",
					"                \"type\": \"null\",",
					"                \"title\": \"The Lunchtimestart Schema\",",
					"                \"default\": null,",
					"                \"examples\": [",
					"                  null",
					"                ]",
					"              },",
					"              \"lunchTimeEnd\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/lunchTimeEnd\",",
					"                \"type\": \"null\",",
					"                \"title\": \"The Lunchtimeend Schema\",",
					"                \"default\": null,",
					"                \"examples\": [",
					"                  null",
					"                ]",
					"              },",
					"              \"executionDeadLine\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/executionDeadLine\",",
					"                \"type\": \"null\",",
					"                \"title\": \"The Executiondeadline Schema\",",
					"                \"default\": null,",
					"                \"examples\": [",
					"                  null",
					"                ]",
					"              },",
					"              \"onlineTradeAllowed\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/onlineTradeAllowed\",",
					"                \"type\": \"boolean\",",
					"                \"title\": \"The Onlinetradeallowed Schema\",",
					"                \"default\": false,",
					"                \"examples\": [",
					"                  false",
					"                ]",
					"              },",
					"              \"tradingAllowed\": {",
					"                \"$id\": \"#/properties/_embedded/properties/tradingPlaces/items/properties/tradingAllowed\",",
					"                \"type\": \"boolean\",",
					"                \"title\": \"The Tradingallowed Schema\",",
					"                \"default\": false,",
					"                \"examples\": [",
					"                  false",
					"                ]",
					"              }",
					"            }",
					"          }",
					"        }",
					"      }",
					"    }",
					"  }",
					"};",
					"pm.environment.set(\"tradingPlacesSchema\", tradingPlacesSchema);",
					"",
					"//************************************************************************************************",
					"// Schema for 'trading place' ********************************************************************",
					"// created via https://jsonschema.net/ ***********************************************************",
					"//************************************************************************************************",
					"const tradingPlaceSchema = ",
					"{",
					"  \"definitions\": {},",
					"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
					"  \"$id\": \"http://example.com/root.json\",",
					"  \"type\": \"object\",",
					"  \"title\": \"The Root Schema\",",
					"  \"required\": [",
					"    \"id\",",
					"    \"code\",",
					"    \"country\",",
					"    \"descriptions\",",
					"    \"openingTime\",",
					"    \"closingTime\",",
					"    \"lunchTimeStart\",",
					"    \"lunchTimeEnd\",",
					"    \"executionDeadLine\",",
					"    \"onlineTradeAllowed\",",
					"    \"tradingAllowed\"",
					"  ],",
					"  \"properties\": {",
					"    \"id\": {",
					"      \"$id\": \"#/properties/id\",",
					"      \"type\": \"string\",",
					"      \"title\": \"The Id Schema\",",
					"      \"default\": \"\",",
					"      \"examples\": [",
					"        \"__ID__c6a9c5a3747cd29510a849e0fec1b778dc888a702e65aa307afaeffaab640a6d81fbe3\"",
					"      ],",
					"      \"pattern\": \"^(.*)$\"",
					"    },",
					"    \"code\": {",
					"      \"$id\": \"#/properties/code\",",
					"      \"type\": \"string\",",
					"      \"title\": \"The Code Schema\",",
					"      \"default\": \"\",",
					"      \"examples\": [",
					"        \"DES\"",
					"      ],",
					"      \"pattern\": \"^(.*)$\"",
					"    },",
					"    \"country\": {",
					"      \"$id\": \"#/properties/country\",",
					"      \"type\": \"string\",",
					"      \"title\": \"The Country Schema\",",
					"      \"default\": \"\",",
					"      \"examples\": [",
					"        \"GB\"",
					"      ],",
					"      \"pattern\": \"^(.*)$\"",
					"    },",
					"    \"descriptions\": {",
					"      \"$id\": \"#/properties/descriptions\",",
					"      \"type\": \"array\",",
					"      \"title\": \"The Descriptions Schema\",",
					"      \"items\": {",
					"        \"$id\": \"#/properties/descriptions/items\",",
					"        \"type\": \"object\",",
					"        \"title\": \"The Items Schema\",",
					"        \"required\": [",
					"          \"shortDescription\",",
					"          \"fullDescription\",",
					"          \"language\"",
					"        ],",
					"        \"properties\": {",
					"          \"shortDescription\": {",
					"            \"$id\": \"#/properties/descriptions/items/properties/shortDescription\",",
					"            \"type\": \"string\",",
					"            \"title\": \"The Shortdescription Schema\",",
					"            \"default\": \"\",",
					"            \"examples\": [",
					"              \"DES\"",
					"            ],",
					"            \"pattern\": \"^(.*)$\"",
					"          },",
					"          \"fullDescription\": {",
					"            \"$id\": \"#/properties/descriptions/items/properties/fullDescription\",",
					"            \"type\": \"string\",",
					"            \"title\": \"The Fulldescription Schema\",",
					"            \"default\": \"\",",
					"            \"examples\": [",
					"              \"KBC FINANCIAL PRODUCTS\"",
					"            ],",
					"            \"pattern\": \"^(.*)$\"",
					"          },",
					"          \"language\": {",
					"            \"$id\": \"#/properties/descriptions/items/properties/language\",",
					"            \"type\": \"string\",",
					"            \"title\": \"The Language Schema\",",
					"            \"default\": \"\",",
					"            \"examples\": [",
					"              \"EN\"",
					"            ],",
					"            \"pattern\": \"^(.*)$\"",
					"          }",
					"        }",
					"      }",
					"    },",
					"    \"openingTime\": {",
					"      \"$id\": \"#/properties/openingTime\",",
					"      \"type\": \"null\",",
					"      \"title\": \"The Openingtime Schema\",",
					"      \"default\": null,",
					"      \"examples\": [",
					"        null",
					"      ]",
					"    },",
					"    \"closingTime\": {",
					"      \"$id\": \"#/properties/closingTime\",",
					"      \"type\": \"null\",",
					"      \"title\": \"The Closingtime Schema\",",
					"      \"default\": null,",
					"      \"examples\": [",
					"        null",
					"      ]",
					"    },",
					"    \"lunchTimeStart\": {",
					"      \"$id\": \"#/properties/lunchTimeStart\",",
					"      \"type\": \"null\",",
					"      \"title\": \"The Lunchtimestart Schema\",",
					"      \"default\": null,",
					"      \"examples\": [",
					"        null",
					"      ]",
					"    },",
					"    \"lunchTimeEnd\": {",
					"      \"$id\": \"#/properties/lunchTimeEnd\",",
					"      \"type\": \"null\",",
					"      \"title\": \"The Lunchtimeend Schema\",",
					"      \"default\": null,",
					"      \"examples\": [",
					"        null",
					"      ]",
					"    },",
					"    \"executionDeadLine\": {",
					"      \"$id\": \"#/properties/executionDeadLine\",",
					"      \"type\": \"null\",",
					"      \"title\": \"The Executiondeadline Schema\",",
					"      \"default\": null,",
					"      \"examples\": [",
					"        null",
					"      ]",
					"    },",
					"    \"onlineTradeAllowed\": {",
					"      \"$id\": \"#/properties/onlineTradeAllowed\",",
					"      \"type\": \"boolean\",",
					"      \"title\": \"The Onlinetradeallowed Schema\",",
					"      \"default\": false,",
					"      \"examples\": [",
					"        false",
					"      ]",
					"    },",
					"    \"tradingAllowed\": {",
					"      \"$id\": \"#/properties/tradingAllowed\",",
					"      \"type\": \"boolean\",",
					"      \"title\": \"The Tradingallowed Schema\",",
					"      \"default\": false,",
					"      \"examples\": [",
					"        false",
					"      ]",
					"    }",
					"  }",
					"};",
					"pm.environment.set(\"tradingPlaceSchema\", tradingPlaceSchema);",
					"",
					"//************************************************************************************************",
					"// Schema for 'listings' *************************************************************************",
					"// created via https://jsonschema.net/ ***********************************************************",
					"//************************************************************************************************",
					"",
					"const listingsSchema=",
					"{",
					"  \"definitions\": {},",
					"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
					"  \"$id\": \"http://example.com/root.json\",",
					"  \"type\": [",
					"    \"object\",",
					"    \"null\"",
					"  ],",
					"  \"required\": [",
					"    \"page\",",
					"    \"_embedded\"",
					"  ],",
					"  \"properties\": {",
					"    \"page\": {",
					"      \"$id\": \"#/properties/page\",",
					"      \"type\": [",
					"        \"object\",",
					"        \"null\"",
					"      ],",
					"      \"required\": [",
					"        \"number\",",
					"        \"size\",",
					"        \"totalElements\",",
					"        \"totalPages\"",
					"      ],",
					"      \"properties\": {",
					"        \"number\": {",
					"          \"$id\": \"#/properties/page/properties/number\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"size\": {",
					"          \"$id\": \"#/properties/page/properties/size\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"totalElements\": {",
					"          \"$id\": \"#/properties/page/properties/totalElements\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        },",
					"        \"totalPages\": {",
					"          \"$id\": \"#/properties/page/properties/totalPages\",",
					"          \"type\": [",
					"            \"number\",",
					"            \"null\"",
					"          ]",
					"        }",
					"      }",
					"    },",
					"    \"_embedded\": {",
					"      \"$id\": \"#/properties/_embedded\",",
					"      \"type\": [",
					"        \"object\",",
					"        \"null\"",
					"      ],",
					"      \"required\": [",
					"        \"listings\"",
					"      ],",
					"      \"properties\": {",
					"        \"listings\": {",
					"          \"$id\": \"#/properties/_embedded/properties/listings\",",
					"          \"type\": [",
					"            \"array\",",
					"            \"null\"",
					"          ],",
					"          \"items\": {",
					"            \"$id\": \"#/properties/_embedded/properties/listings/items\",",
					"            \"type\": [",
					"              \"object\",",
					"              \"null\"",
					"            ],",
					"            \"required\": [",
					"              \"id\",",
					"              \"ticker\",",
					"              \"rate\",",
					"              \"fixAt\",",
					"              \"roundLot\"",
					"            ],",
					"            \"properties\": {",
					"              \"id\": {",
					"                \"$id\": \"#/properties/_embedded/properties/listings/items/properties/id\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"ticker\": {",
					"                \"$id\": \"#/properties/_embedded/properties/listings/items/properties/ticker\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"rate\": {",
					"                \"$id\": \"#/properties/_embedded/properties/listings/items/properties/rate\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              },",
					"              \"fixAt\": {",
					"                \"$id\": \"#/properties/_embedded/properties/listings/items/properties/fixAt\",",
					"                \"type\": [",
					"                  \"string\",",
					"                  \"null\"",
					"                ],",
					"                \"pattern\": \"^(.*)$\"",
					"              },",
					"              \"roundLot\": {",
					"                \"$id\": \"#/properties/_embedded/properties/listings/items/properties/roundLot\",",
					"                \"type\": [",
					"                  \"number\",",
					"                  \"null\"",
					"                ]",
					"              }",
					"            }",
					"          }",
					"        }",
					"      }",
					"    }",
					"  }",
					"};",
					"",
					"pm.environment.set(\"listingsSchema\", listingsSchema);",
					"",
					"//************************************************************************************************",
					"//global function to determine next day/next working day *****************************************",
					"//************************************************************************************************",
					"var moment = require('moment');",
					"let nextDay = moment().add(\"days\",1).format(\"YYYY-MM-DD\"); //next day in specified format",
					"switch (moment().add(\"days\",1).format(\"dddd\")){",
					"    case \"Sunday\":",
					"        var nextWorkingDay = moment().add(\"days\",2).format(\"YYYY-MM-DD\");",
					"        break;",
					"    case \"Saturday\":",
					"        var nextWorkingDay = moment().add(\"days\",3).format(\"YYYY-MM-DD\");",
					"        break;",
					"    default:",
					"        var nextWorkingDay = moment().add(\"days\",1).format(\"YYYY-MM-DD\");",
					"}",
					"pm.globals.set('PrS:nextDay', JSON.stringify(nextDay));",
					"pm.globals.set('PrS:nextWorkingDay', JSON.stringify(nextWorkingDay));",
					"",
					"/*",
					"// Define test data, setup configuration per environment",
					"var env = pm.environment.get(\"envName\");",
					"if (env === \"MDB-R191-TEST\") {",
					"//    var contractNumber = \"{{contractNumber}}\";",
					"//    var debtorAccountNo = \"{{debtorAccountNo}}\";",
					"//    var debtorAccountName = \"{{debtorAccountName}}\";",
					"//    var creditorAccountNo = \"{{creditorAccountNo}}\";",
					"    } else if (env === \"MDB-R191-LAT\") {",
					"} else {",
					"    throw new Error(\"Wrong environment selected, requests are skipped!\")",
					"}",
					"//pm.globals.set('PrS:contractNumber', JSON.stringify(contractNumber));",
					"//pm.globals.set('PrS:debtorAccountNo', JSON.stringify(debtorAccountNo));",
					"//pm.globals.set('PrS:debtorAccountName', JSON.stringify(debtorAccountName));",
					"//pm.globals.set('PrS:creditorAccountNo', JSON.stringify(creditorAccountNo));",
					"*/",
					"",
					"// Save the object as a variable.",
					"// JSON.stringify will serialize the object so that Postman can save it",
					"",
					"//pm.globals.set('PrS:tags', JSON.stringify(tags));",
					"//pm.environment.set(\"testGroup\",\"Patient Zero\") //set environment variable if/when needed",
					"",
					"                //pm.response.to.be.ok;         - Status code must be 200",
					"                //pm.response.to.be.error       - Checks 4XX or 5XX",
					"                //pm.response.to.be.serverError - Checks 5XX",
					"                //pm.response.to.be.clientError - Checks 4XX status code",
					"",
					"// Save common tests in a global variable",
					"postman.setGlobalVariable(\"commonTests\", () => {",
					"    pm.test(\"Response must be valid with/with out a body and with proper status code\", function () {",
					"        if ([\"GET\",\"POST\",\"PUT\"].indexOf(request.method) > -1) {",
					"            pm.response.to.not.be.error;",
					"            pm.response.to.be.withBody;",
					"            pm.response.to.be.json;",
					"            pm.response.to.have.jsonBody();",
					"            pm.response.to.not.have.jsonBody('error');",
					"            pm.response.to.have.header('Content-Type', 'application/hal+json;charset=UTF-8');",
					"        } else {",
					"            pm.response.to.not.be.withBody;",
					"        }",
					"        switch(request.method){",
					"            case \"POST\":",
					"                pm.response.to.have.status(201);",
					"                break;",
					"            case \"PUT\":",
					"                pm.response.to.have.status(200);",
					"                break;",
					"            case \"GET\":",
					"                pm.response.to.have.status(200);",
					"                break;",
					"            case \"DELETE\":",
					"                pm.response.to.have.status(204);",
					"                break;",
					"        }        ",
					"    });",
					"    //pm.test(\"Response time is below 1000ms\", function () {",
					"    //    pm.expect(pm.response.responseTime).to.be.below(1000);",
					"    //});",
					"});",
					"",
					"postman.setGlobalVariable(\"assertValidCreditorAgent\", () => {",
					"    pm.expect(address).to.be.an('object').with.keys('name1', 'name2', 'street', 'city', 'country');",
					"    pm.expect(address.name1).to.be.a('string').and.not.empty;",
					"    pm.expect(address.name2).to.be.a('string').and.not.empty;",
					"    pm.expect(address.street).to.be.a('string').and.not.empty;",
					"    pm.expect(address.city).to.be.a('string').and.not.empty;",
					"    pm.expect(address.country).to.be.a('string').with.lengthOf(2).and.match(/[A-Z]+/);",
					"});",
					"",
					"postman.setGlobalVariable(\"sessionInit\", (testSession, sessionName) => {",
					"    //session init section",
					"    console.log(request.name + \", initialization: \" + testSession + \", global var: \" + sessionName);",
					"    console.log(request.name + \", executing: \" + testSession[0]);",
					"    ",
					"    // Select first test from session to be executed",
					"    postman.setNextRequest(testSession[0]); ",
					"    testSession.shift();",
					"    if (testSession.length === 0) {",
					"        console.log(request.name + \", test session is empty, unset \" + sessionName);",
					"        pm.globals.unset(sessionName);",
					"        console.log(request.name + \", terminate tests execution list\");",
					"    } else {",
					"        pm.globals.set(sessionName, testSession);",
					"        console.log(request.name + \" for \" + sessionName + \", updated list of tests to be executed: \" + testSession);",
					"    }",
					"});",
					"",
					"postman.setGlobalVariable(\"sessionNavigate\", () => {",
					"    console.log(request.name + \", entering ...\");",
					"    if (pm.globals.get(\"requestsToRun\") === undefined){",
					"        console.log(request.name + \", requestsToRun is undefined\");",
					"        pm.globals.set(\"testRailTestCases\",\"\");",
					"        console.log(request.name + \", reset global var: testRailTestCases\");    ",
					"        if (pm.globals.get(\"testSession\") === undefined){",
					"            console.log(request.name + \", testSession is undefined\");",
					"            //here >> export list of tests executed",
					"            var tests = pm.environment.get(\"testRailTestsInRun\");",
					"            tests = tests.replace(/C/g, \"\");",
					"            tests = tests.replace(/ /g, \", \");",
					"            tests = tests.replace(/,,/g, \",\");",
					"            console.log(\"TestRail tests executed executed in this run: \" + tests);",
					"            console.log(\"The end\");",
					"            postman.setNextRequest(null);",
					"        } else {",
					"        var testSession = pm.globals.get(\"testSession\");",
					"        console.log(request.name + \", checking what to run: \" + testSession[0]);",
					"        postman.setNextRequest(testSession[0]); // Run: GET SWIFT payment",
					"        testSession.shift();",
					"        if (testSession.length === 0) {",
					"            pm.globals.unset(\"testSession\");",
					"            console.log(request.name + \", terminate execution list\");",
					"        } else {",
					"            pm.globals.set(\"testSession\", testSession);",
					"            console.log(request.name + \", updated list of tests to be executed: \" + testSession);",
					"        }}",
					"    } else {",
					"    var requestsToRun = pm.globals.get(\"requestsToRun\");",
					"    console.log(request.name + \", checking what to run: \" + requestsToRun[0]);",
					"    postman.setNextRequest(requestsToRun[0]); ",
					"    requestsToRun.shift();",
					"    if (requestsToRun.length === 0) {",
					"        pm.globals.unset(\"requestsToRun\");",
					"        console.log(request.name + \", terminate requests execution list\");",
					"    } else {",
					"        pm.globals.set(\"requestsToRun\", requestsToRun);",
					"        console.log(request.name + \", updated list of requests to be executed: \" + requestsToRun);",
					"    }}",
					"});",
					"",
					"postman.setGlobalVariable(\"cleanup\", () => {",
					"    const clean = [\"requestsToRun\", \"testSession\"];",
					"    for(let i = 0; i < clean.length; ++i){",
					"        pm.globals.unset(clean[i]);",
					"    }",
					"});",
					"",
					"postman.setGlobalVariable(\"testsExecuted\", (listOfExecutedTests) => {",
					"    let tests =  pm.environment.get(\"testRailTestsInRun\");",
					"    //console.log(\"TestRail tests stored in 'testRailTestsInRun': \" + tests);",
					"    if (tests.length > 0) {",
					"        tests = tests + \" \"",
					"    }",
					"    tests = tests + listOfExecutedTests;",
					"    //console.log(\"TestRail tests to be stored to 'testRailTestsInRun': \" + tests);",
					"    pm.environment.set(\"testRailTestsInRun\",tests);",
					"    //console.log(\"TestRail tests executed so far: \" + tests);",
					"});",
					"",
					"postman.setGlobalVariable(\"extractTestCaseIDFromRequestName\", () => {",
					"    let n = request.name.lastIndexOf(\"(\");",
					"    return request.name.substr(n + 1, request.name.length - n - 2);",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7e7d41ba-50b0-48b0-bc52-53d4e572706a",
				"type": "text/javascript",
				"exec": [
					"// check if test is executed",
					"pm.test(\"'\" + request.name +\"' is initiated\", function () {",
					"    //pm.response.to.have.status(200);",
					"    pm.response.to.be.success;",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"id": "4bf0e200-39eb-4e7e-be7a-c70707f7c31d",
			"key": "EPIC",
			"value": "PRODUCT-10195",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}