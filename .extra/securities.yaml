openapi: 3.0.2
info:
  description: >-
    CREALOGIX Digital Banking Hub: Brokerage API

    **Brokerage Security-API** offers access to instruments

    ## Paging ##

    If the result of request is a list, it may be split in pages using the __size__ parameter.


    In this case the result provides the standard HAL page __resource links__ (__first__, __last__, __next__, __previous__ and __self__). A __page meta data__ summary (__page number__, __page size__, __total number of pages__ and __total number of items__) is also provided.


    The calling process must be sure to set an appropriate page length to avoid being flooded with data.  Please remember that if the page length is set to an high value the called service may become unresponsive.

    ## Securities - General Entry Points ##

    The main entry point `/securities` provides a simple list of all instruments visible according to the calling party's permissions.

    ### Securities' Filters ###

    The optional parameter __securityTypeId__ restricts the result to the given type.


    To retrieve a single security add the __securityId__ at the end of the path.

    ## Security Listings - General Entry Points

    The main entry point `/listings` provides a simple list of all listings visible according to the calling party's permissions.

    ### Security Listings' Filters ###

    The optional parameter __securityId__ restricts the result to the given security.


    The optional parameter __tradingPlaceId__ restricts the result to the given trading place.


    To retrieve a single listing add the __securityListingId__ at the end of the path.

    ## Trading Places - General Entry Points ##

    The main entry point `/tradingplaces` provides a simple list of all trading places visible according to the calling party's permissions.

    ### Trading Places' Filters ###

    To retrieve a single trading place add the __tradingPlaceId__ at the end of the path.

    ## Security Types - General Entry Points

    The main entry point `/types` provides a simple list of all security types visible according to the calling party's permissions.

    ### Security Types' Filters ###

    To retrieve a single trading place add the __securityTypeId__ at the end of the path.
  version: 1.0.0
  title: Brokerage Security API
  contact:
    name: Andreas Huck
    email: andreas.huck@crealogix.com
  license:
    name: CREALOGIX
paths:
  /brokerage/securities/{tenantId}/v1/securities:
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get securities
      description: List of securities visible after applying the permissions of the calling
        party.
      operationId: getAllSecurities
      parameters:
        - name: page
          in: query
          description: The page number.
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: securityTypeId
          in: query
          description: for security type filtering.
          required: false
          schema:
            $ref: "#/components/schemas/Identifier"
        - name: size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            format: int64
            default: 10
        - name: securityNumber
          in: query
          description: security number.
          required: false
          schema:
            type: string
        - name: isin
          in: query
          description: International Securities Identification Number, ISO 6166, 12
            alphanumeric characters.
          required: false
          schema:
            type: string
        - name: tradingPlaceId
          in: query
          description: Trading place id for security
          required: false
          schema:
            $ref: "#/components/schemas/Identifier"
        - name: title
          in: query
          description: security name
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SecurityPageDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/security.readonly
  "/brokerage/securities/{tenantId}/v1/securities/{securityId}":
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get a security
      description: Gets the given security if visible after applying the permissions of the
        calling party.
      operationId: getSecurity
      parameters:
        - name: securityId
          in: path
          description: The implementation internal identifier, session based.
          required: true
          schema:
            $ref: "#/components/schemas/Identifier"
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SecurityDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/security.readonly
  /brokerage/securities/{tenantId}/v1/listings:
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get security listings
      description: List of security listing visible after applying the permissions of the
        calling party.
      operationId: getAllSecurityListings
      parameters:
        - name: page
          in: query
          description: The page number.
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: securityId
          in: query
          description: for security filtering.
          required: false
          schema:
            $ref: "#/components/schemas/Identifier"
        - name: size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            format: int64
            default: 10
        - name: tradingPlaceId
          in: query
          description: for trading place filtering.
          schema:
            $ref: "#/components/schemas/Identifier"
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SecurityListingPageDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/security.readonly
  "/brokerage/securities/{tenantId}/v1/listings/{securityListingId}":
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get a security listing
      description: Gets the given security listing if visible after applying the
        permissions of the calling party.
      operationId: getSecurityListing
      parameters:
        - name: securityListingId
          in: path
          description: The implementation internal identifier, session based.
          required: true
          schema:
            $ref: "#/components/schemas/Identifier"
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SecurityListingDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/security.readonly
  /brokerage/securities/{tenantId}/v1/tradingplaces:
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get trading places
      description: List of trading places visible after applying the permissions of the
        calling party.
      operationId: getAllTradingPlaces
      parameters:
        - name: page
          in: query
          description: The page number.
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            format: int64
            default: 10
        - name: code
          in: query
          description: Marketplace code
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/TradingPlacePageDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/tradingplace.readonly
  "/brokerage/securities/{tenantId}/v1/tradingplaces/{tradingPlaceId}":
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get a trading place
      description: Gets the given trading place if visible after applying the permissions
        of the calling party.
      operationId: getTradingPlace
      parameters:
        - name: tradingPlaceId
          in: path
          description: The implementation internal identifier, session based.
          required: true
          schema:
            $ref: "#/components/schemas/Identifier"
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/TradingPlaceDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/tradingplace.readonly
  /brokerage/securities/{tenantId}/v1/types:
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get securtity's types
      description: List of security's types visible after applying the permissions of the
        calling party.
      operationId: getAllSecurityTypes
      parameters:
        - name: page
          in: query
          description: The page number.
          required: false
          schema:
            type: integer
            format: int64
            default: 0
        - name: size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            format: int64
            default: 10
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SecurityTypePageDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/security.readonly
  "/brokerage/securities/{tenantId}/v1/types/{securityTypeId}":
    parameters:
      - name: tenantId
        in: path
        description: Tenannt identifier
        required: true
        schema:
          type: string
      - name: tppIdParam
        in: header
        description: Distinct 3rd party identifer as obtained from preta.eu-registration
        required: false
        schema:
          type: string
      - name: X-Correlation-Id
        in: header
        description: Request identifier to trace a request route across the subsystems.
        required: false
        schema:
          type: string
    get:
      summary: Get a security's type
      description: Gets the given security's type if visible after applying the permissions
        of the calling party.
      operationId: getSecurityType
      parameters:
        - name: securityTypeId
          in: path
          description: The implementation internal identifier, session based.
          required: true
          schema:
            $ref: "#/components/schemas/Identifier"
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/SecurityTypeDto"
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Business logic error
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ResponseStatus"
      security:
        - OIDC:
            - https://api.crealogix.com/brokerage/security.readonly
servers:
  - url: //api.crealogix.com/
components:
  securitySchemes:
    OIDC:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://api.crealogix.com/oauth/authorize
          scopes:
            https://api.crealogix.com/brokerage/security.readonly: view security data only
            https://api.crealogix.com/brokerage/tradingplace.readonly: view trading place data only
  schemas:
    AmountDto:
      type: object
      properties:
        currencyIsoCode:
          description: Currency ISO code (ISO 4217).
          type: string
          example: CHF
        value:
          type: number
          format: double
          description: unformatted value of the amount
          example: 2303.56
    InterestFrequencyType:
      description: The frequency of the interest calculation.
      type: string
      enum:
        - ANNUALLY
        - TWICE_A_YEAR
        - TRIMESTRIALLY
        - QUATERLY
        - TWICE_A_MONTH
        - MONTHLY
    Link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          example: /brokerage/securities/v1/securities?page=0&size=30
        templated:
          type: boolean
          example: false
    Identifier:
      description: Identifier object
      type: object
    Message:
      type: object
      description: A status message can be send in case of ERROR, WARNING or INFORMATION
        and might be presented to user if applicable.
      properties:
        category:
          type: string
          description: category describing the severity of messeage
          enum:
            - SUCCESS
            - ERROR
            - WARN
          example: SUCCESS
        code:
          type: string
          description: Technical Code, describing the message content
          example: TRANSACTION_ACCEPTED
        text:
          type: string
          description: complete message. Interface should deliver text in user's language
          example: Security has been processed.
    PageMetadata:
      type: object
      properties:
        number:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    ResponseStatus:
      type: object
      description: Generic status-object for responses
      properties:
        status:
          type: boolean
          example: true
          description: represents the processing result of request. helpful for early
            processing by javascript clients
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    SecurityDto:
      description: >-
        The financial instrument

        * currency    : The currency to apply if the security is a nominal value type.

        * descriptions: At least one description must be provided.

        * riskCurrency: Associated risk currency of the security.
      type: object
      properties:
        currencyIsoCode:
          description: Currency ISO code (ISO 4217).
          type: string
          example: CHF
        descriptions:
          type: array
          items:
            $ref: "#/components/schemas/SecurityDescriptionDto"
        id:
          description: The implementation internal identifier, session based.
          $ref: "#/components/schemas/Identifier"
        isin:
          description: International Securities Identification Number, ISO 6166, 12
            alphanumeric characters.
          type: string
          example: US5949181045
        interestFrequency:
          $ref: "#/components/schemas/InterestFrequencyType"
        maturityDate:
          description: RFC3339 date-time
          type: string
          format: date
          example: 2018-08-22
        maturityRate:
          description: Maturity rate in security currency.
          type: number
          format: double
          example: 5.5
        modifiedDuration:
          description: Modified duration indicates the changes of the bond price (in
            percent) if the market interest rate level changes by one per cent.
          type: number
          format: double
          example: 15.5
        optionType:
          $ref: "#/components/schemas/SecurityOptionType"
        orderType:
          $ref: "#/components/schemas/SecurityOrderType"
        rating:
          description: Rating of the security.
          type: string
          example: AAA
        ratingSource:
          description: Name of the source that provided the security rating (e.g. Standard
            , Moody's, ...).
          type: string
          example: S&P Global
        riskCurrencyIsoCode:
          description: Currency ISO code (ISO 4217).
          type: string
          example: CHF
        securityNumber:
          description: security number.
          type: string
          example: 123456789123456780
        securityValue:
          $ref: "#/components/schemas/ValueDto"
        status:
          $ref: "#/components/schemas/SecurityStatusType"
        strikePrice:
          $ref: "#/components/schemas/AmountDto"
        timeToMaturity:
          description: Time to maturity in days
          type: number
          format: int32
          example: 90
        tradable:
          description: Defines if the security can be traded by the customers.
          type: boolean
          example: true
        tradeUnit:
          description: smallest trade unit for this security.
          type: number
          format: double
          example: 1
        tradingRestrictions:
          $ref: "#/components/schemas/TradingRestrictionsType"
        usAsset:
          description: QI US Securities tradable right required. The value should be
            checked against the USQ right setting of the customer.
          type: boolean
          example: false
        withdrawalInterseRate:
          description: Security withdrawal interest rate.
          type: number
          format: double
          example: 5.5
        withdrawalInterestPeriod:
          description: Security withdrawal interest period in days.
          type: number
          format: int32
          example: 30
        yeldToMaturity:
          description: Yield to maturity of a fixed-interest security calculated in
            relation to the cash flow.
          type: number
          format: double
          example: 123.45
    SecurityDescriptionDto:
      description: The description of the security in any language.
      type: object
      properties:
        language:
          description: The language used for the description, ISO 639-1 format.
          type: string
          example: EN
        description:
          description: The comprehensive description of the security in the given language.
          type: string
          example: Securities are generally classified as either equity securities,
            such as stocks and debt securities, such as bonds and debentures.
            The sale of securities to investors is one of the primary ways that
            publicly-traded companies  drive new capital for operations.
        shortDescription:
          description: The description of the security for display on a web site.
          type: string
          example: A security, in a financial context, is a certificate or other
            financial instrument that has monetary value and can be traded.
    SecurityListDto:
      description: List of securities
      type: object
      properties:
        securities:
          type: array
          items:
            $ref: "#/components/schemas/SecurityDto"
    SecurityListingDto:
      description: The security listing defines at which market places and in which
        currencies securities are traded.  The security listing also includes
        the associated ticker symbol and prices of the security at the specified
        market places.
      type: object
      properties:
        fixAt:
          description: Date and time of origin of security rate in the format RFC3339
            date-time
          type: string
          format: date-time
          example: 2018-05-22T15:23:00+00:00
        id:
          description: The implementation internal identifier, session based.
          $ref: "#/components/schemas/Identifier"
        rate:
          description: Security rate (piece rate or percentage rate). Corresponds to
            "previous day" ("Vortag") on public website (Valuation Rate).
          type: number
          format: double
          example: 5.5
        roundLot:
          description: Trade multiplier factor/value. A trade needs to be a multiple amount
            of ROUNT_LOT, and ROUND_LOT a multiple of TRADE_UNIT.
          type: number
          format: double
          example: 3.45
        ticker:
          description: Ticker symbol of the security. Corresponds with "Symbol" on the
            public website (e.g. CLXN)
          type: string
          example: CLXN
    SecurityListingListDto:
      description: List of security listing
      type: object
      properties:
        listings:
          type: array
          items:
            $ref: "#/components/schemas/SecurityListingDto"
    SecurityListingPageDto:
      description: Paging elements for security listings
      type: object
      required:
        - page
      properties:
        _embedded:
          $ref: "#/components/schemas/SecurityListingListDto"
        page:
          $ref: "#/components/schemas/PageMetadata"
    SecurityOptionType:
      description: Only for options.
      type: string
      enum:
        - CALL
        - NONE
        - PUT
      example: CALL
    SecurityOrderType:
      description: >-
        * LIMITED             : Only limited trade allowed.

        * LIMITED_OR_UNLIMITED: Both limited and unlimited trade are allowed. Default value.

        * STOP_LIMIT          : Only limited trade with trigger allowed.

        * STOP_LIMIT_OR_LOSS  : Both limited and unlimited trade with trigger allowed.

        * STOP_LOSS           : Only unlimited trade with trigger allowed.

        * UNLIMITED           : Only trade 'at market' allowed.
      type: string
      enum:
        - LIMITED
        - LIMITED_OR_UNLIMITED
        - STOP_LIMIT
        - STOP_LIMIT_OR_LOSS
        - STOP_LOSS
        - UNLIMITED
      example: LIMITED_OR_UNLIMITED
    SecurityPageDto:
      description: Paging elements for securities
      type: object
      required:
        - page
      properties:
        _embedded:
          $ref: "#/components/schemas/SecurityListDto"
        page:
          $ref: "#/components/schemas/PageMetadata"
    SecurityStatusType:
      description: >-
        Status of the security:

        * ACTIVE The security is availble and may be used.

        * DELETE The security isn't available anymore, it is retained for order and transaction history.
      type: string
      enum:
        - ACTIVE
        - DELETED
    SecurityTypeDescriptionDto:
      description: Translations of security type
      type: object
      properties:
        language:
          description: Language code for the security type
          type: string
          example:
            - EN
        description:
          description: Description of the security type in the respective language.
          type: string
          example: Money Market Deposit.
    SecurityTypeDto:
      description: Type definition (e.g bond, cash, equity, ...)
      type: object
      properties:
        id:
          description: The implementation internal identifier, session based.
          $ref: "#/components/schemas/Identifier"
        code:
          description: Unique code that identifies the security's type.
          type: string
          example: AA-25-EN
        descriptions:
          type: array
          items: 
            $ref: "#/components/schemas/SecurityTypeDescriptionDto"  
    SecurityTypeCategoryType:
      description: Categorty type
      type: string
      enum:
        - BOND
        - CASH
        - CONTRACT
        - EQUITY
        - FUND
        - MORTAGE
        - OPTION
      example: CASH
    SecurityTypeListDto:
      description: List of security's types
      type: object
      properties:
        securityTypes:
          type: array
          items:
            $ref: "#/components/schemas/SecurityTypeDto"
    SecurityTypePageDto:
      description: Paging elements for securities
      type: object
      required:
        - page
      properties:
        _embedded:
          $ref: "#/components/schemas/SecurityTypeListDto"
        page:
          $ref: "#/components/schemas/PageMetadata"
    TradingPlaceDescriptionDto:
      description: Translations of trading place
      type: object
      properties:
        fullDescription:
          description: The full description of the tradinf place.
          type: string
          example: This is the full description of the trading place.
        shortDescription:
          description: a concise description of the trading place.
          type: string
          example: short description
        language:
          description: ISO 639-1 language available on this trading place
          type: string
          example:
            - DE
    TradingPlaceDto:
      description: Trading place where securities are listed and where they can be
        bought/sold accourding to the wishes.
      type: object
      properties:
        closingTime:
          description: RFC3339 date-time, the date part may be ignored, SWAGGER 2.0 doesn't
            support the RFC3339 full-time format.
          type: string
          format: date-time
          example: 2018-05-18T16:00:00+00:00
        code:
          description: trading place code
          type: string
          example: SIX
        country:
          description: ISO 3166 two characters contry code.
          type: string
          example: CH
        executionDeadLine:
          description: Last time for submitting orders to be executed on the current date.
            RFC3339 date-time, the date part may be ignored, SWAGGER 2.0 doesn't
            support the RFC3339 full-time format.
          type: string
          format: date-time
          example: 2018-05-18T10:53:00+00:00
        descriptions:
          type: array
          items: 
            $ref: "#/components/schemas/TradingPlaceDescriptionDto"  
        id:
          description: The implementation internal identifier, session based.
          $ref: "#/components/schemas/Identifier"
        lunchTimeEnd:
          description: RFC3339 date-time, the date part may be ignored, SWAGGER 2.0 doesn't
            support the RFC3339 full-time format.
          type: string
          format: date-time
          example: 2018-05-18T11:00:00+00:00
        lunchTimeStart:
          description: RFC3339 date-time, the date part may be ignored, SWAGGER 2.0 doesn't
            support the RFC3339 full-time format.
          type: string
          format: date-time
          example: 2018-05-18T12:00:00+00:00
        onlineTradeAllowed:
          description: True if the online trade for this place is allowed, otherwise false.
          type: boolean
          example: true
        openingTime:
          description: RFC3339 date-time, the date part may be ignored, SWAGGER 2.0 doesn't
            support the RFC3339 full-time format.
          type: string
          format: date-time
          example: 2018-05-18T08:00:00+00:00
        tradingAllowed:
          description: enables or disables the trading on this place.
          type: boolean
          example: true
    TradingPlaceListDto:
      description: List of trading places
      type: object
      properties:
        tradingPlaces:
          type: array
          items:
            $ref: "#/components/schemas/TradingPlaceDto"
    TradingPlacePageDto:
      description: Paging elements for trading places
      type: object
      required:
        - page
      properties:
        _embedded:
          $ref: "#/components/schemas/TradingPlaceListDto"
        page:
          $ref: "#/components/schemas/PageMetadata"
    TradingRestrictionsType:
      description: |-
        Trading restrictions for securities.
        * BUY_ONLY : Tradable just when buying.
        * SELL_ONLY: Tradable just for selling. 
      type: string
      enum:
        - BUY_ONLY
        - SELL_ONLY
        - UNRESTRICTED
      example: UNRESTRICTED
    ValueDto:
      description: a value to which different meanings apply.
      type: object
      properties:
        data:
          type: number
          format: double
          example: 245.45
        type:
          $ref: "#/components/schemas/ValueType"
    ValueType:
      description: >-
        The type of the value:

        * NOMINAL           : the nominal value type is expressed as a decimal (e.g monetary value)

        * NOMINAL_PERCENTAGE: the nominal percentage value type is expressed as a decimal and represents a percentage.

        * HOLDING           : the holding value type refers to debts or equities and represents dividends expressed as a decimal.

        * PIECE             : the piece value type refers to securities physical nature (certificate securities), the value is here an integer.
      type: string
      enum:
        - NOMINAL
        - NOMINAL_PERCENTAGE
        - HOLDING
        - PIECE
      example: NOMINAL