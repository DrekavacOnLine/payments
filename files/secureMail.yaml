openapi: 3.0.2
info:
  description: >
    CREALOGIX Digital Banking Hub: Secure Mail API

    The Secure Mail API serves the retrieval of secure mail exchanged between
    bank and E-Banking users (contracts). Throughout the document we use the
    term userId, which is equivalent to the contract number.

    The options OLD (read) and NEW (unread) allow to group notifications. The
    options VISIBLE and DELETED allow to mark the documents as visible/hidden by
    the person (login).


    # Details #


    ## Date and Time ##


    OpenAPI requires the use of RFC 3339 format for dates and times. Dates
    showing the time must include the time zone.


    ## HTTP Headers ##

    The __X-Correlation-Id__ header is not any more part of this specification.
    The header still exists but is handled by a specific node (e.g Gateway) of
    the runtime environment.


    ## Paging ##

    If the result of request is a list, it may be split in pages using the
    __size__ parameter.

    In this case the result provides the standard HAL page __resource links__
    (__first__, __last__, __next__, __previous__ and __self__). 

    A __page meta data__ summary (__page number__, __page size__, __total number
    of pages__ and __total number of items__) is also provided.

     ## Tenant ID ##

    The tenant identifier should be a human readable string. For Crealogix could
    be CLXN. This identifier should be mapped internally by the implementation
    if required.

    # Entry Points #


    ## Documents - general entry points ##

    As Entrypoint or for unspecific queries a request to `/securemails`-URL
    delivers a list of all secure mail accessible by the authorized contract.
    `/securemails` returns metadata (such as mail subject) for each secure mail
    as well as HAL-Links with URLs to more detailled APIs, see below.

    ## Document - specific requests ##

    Instead of requesting list of all available documents, a specific secure
    mail can be accessed by using the *secureMailId* of this secure mail. Please
    be aware, that all Ids are session specific and will change from one session
    to the other (for details see general API concepts documentation).

    With a specific *secureMailId* the following endpoints are available
     - `/securemails/{secureMailId}` delivering metadata of the specific document

    ## Secure Mail Attachments - specific requests ##

    A secure mail may contain reference to one or more files. The default
    response is a ZIP formatted archive containing the attachments.

    Using the index parameter the caller may obtain a single seczre mail in the
    original format.

    PDF files are always sent in their original format, even when the
    notification contains only one.  This makes it easy to use on mobile
    devices.

    ## Change Log ##


    |Version|Change description                                            |Date      |Author         |
    |-------|--------------------------------------------------------------|----------|---------------|
    |1.0.0  |Initial creation based on the Documents API                   |21.12.2018|Marcel Signer  | 
    |1.0.1  |Small updates on the methods + conversion to OpenAPI 3.0.0    |07.03.2019|Nabil Benothman| 
    |1.0.2  |Upgrade to OpenAPI 3.0.2                                      |08.03.2019|Nabil Benothman|
    |1.0.3  |Adapted to latest CLX' API standards (responses, ...)         |11.04.2019|Andreas Huck   | 
    |1.0.4  |Added receiver address when creating a message. Removed _links|07.05.2019|Borko Vasilev  |
    |1.0.5  |Adding rename folder functionality                            |13.05.2019|Nabil Benothman|
    |1.0.6  |Bulk delete/Move messages functionality                       |27.05.2019|Nabil Benothman|
    |1.0.7  |Adding component responses                                    |06.09.2019|Nabil Benothman|
  title: Secure Mail API
  version: 1.0.7
  contact:
    name: Marcel Signer
    email: marcel.signer@crealogix.com
  license:
    name: CREALOGIX
servers:
  - url: '//api.crealogix.com/messaging/securemail/{tenantId}/v1'
    variables:
      tenantId:
        default: unknown
paths:
  /topics:
    get:
      summary: Get all message topics
      description: Delivers all available message topics
      operationId: getAllMessageTopics
      parameters:
        - name: lang
          in: query
          description: >-
            The preferred language of the caller. ISO 639-1 format. If not
            specified the implementation delivers the result in the default
            language. If the given language is NOT supported the implementation
            delivers the result in the default language.
          required: false
          schema:
            type: string
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - Topic
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageTopicList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /folders:
    get:
      summary: Get all message folders
      description: Delivers all available message folders
      operationId: getAllMessageFolders
      parameters:
        - name: lang
          in: query
          description: >-
            The preferred language of the caller. ISO 639-1 format. If not
            specified the implementation delivers the result in the default
            language. If the given language is NOT supported the implementation
            delivers the result in the default language.
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: a functionality to allow looking for a folder by its name
          required: false
          schema:
            type: string
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - Folder
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageFolderList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      summary: Create a new user folder
      description: The user has the possibility to create a new custom folder
      operationId: createFolder
      requestBody:
        $ref: '#/components/requestBodies/CreateFolderRequestBody'
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - Folder
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '201':
          $ref: '#/components/responses/EntityCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /folders/{folderId}:
    put:
      summary: update the folder name
      description: the user should be able to rename a folder he/she previously created
      operationId: renameFolder
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          description: the unique identifier of the folder
          required: true
          schema:
            $ref: '#/components/schemas/Identifier'
      requestBody:
        $ref: '#/components/requestBodies/UpdateFolder'
      tags:
        - Folder
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageFolderList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      summary: delete the folder given by its ID
      description: the user should be able to delete a folder he/she previously created
      operationId: deleteFolder
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          description: the unique identifier of the folder
          required: true
          schema:
            $ref: '#/components/schemas/Identifier'
      tags:
        - Folder
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageFolderList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'

  '/securemails/{secureMailId}/attachments/{attachmentId}':
    get:
      summary: get attachments of a secure mail identified by the secureMailId
      description: >-
        Returns a specific secure mail attachment. If the fileIndex parameter is
        provided, then a single file is returned. The first file into the
        attachment has the index 1. If the index points to a non existing file
        an HTTP 404 File Not Found is returned.
      operationId: getAttachmentByIdAndSecureMailId
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
        - name: secureMailId
          in: path
          description: the unique identifier of the secure mail
          required: true
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: attachmentId
          in: path
          description: the unique identifier of the secure mail attachment
          required: true
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: lang
          in: query
          description: >-
            The preferred language of the caller. ISO 639-1 format. If not
            specified the implementation delivers the result in the default
            language. If the given language is NOT supported the implementation
            delivers the result in the default language.
          required: false
          schema:
            type: string
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/securemails/{secureMailId}/attachments':
    get:
      summary: get attachments of a secure mail identified by the secureMailId
      description: >-
        Returns a specific secure mail attachment. If the fileIndex parameter is
        provided, then a single file is returned. The first file into the
        attachment has the index 1. If the index points to a non existing file
        an HTTP 404 File Not Found is returned.
      operationId: getAttachmentBySecureMailId
      parameters:
        - name: secureMailId
          in: path
          description: the unique identifier of the secure mail
          required: true
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: lang
          in: query
          description: >-
            The preferred language of the caller. ISO 639-1 format. If not
            specified the implementation delivers the result in the default
            language. If the given language is NOT supported the implementation
            delivers the result in the default language.
          required: false
          schema:
            type: string
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          $ref: '#/components/responses/ZipResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/securemails/{secureMailId}':
    get:
      summary: get secureMail by id
      description: |-
        Returns a specific secureMail.
        The secureMail is marked as read.
      operationId: getSecureMailById
      parameters:
        - name: secureMailId
          in: path
          required: true
          description: the unique identifier of the secureMail
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: lang
          in: query
          description: >-
            Not sure, if we need this parameter!!!! The preferred language of
            the caller. ISO 639-1 format. If not specified the implementation
            delivers the result in the default language. If the given language
            is NOT supported the implementation delivers the result in the
            default language.
          required: false
          schema:
            type: string
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecureMailWithMetaData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      summary: move secureMail to another folder
      description: |-
        The secureMail is moved to the folder specified.
        As result returns the moved secureMail.
      operationId: moveMailToFolder
      parameters:
        - name: secureMailId
          in: path
          required: true
          description: the unique identifier of the secureMail
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: folderId
          in: query
          description: The folder the secure mail to move to
          required: true
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecureMailWithMetaData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      summary: delete a secureMail
      description: |-
        The secureMail is deleted - moved to the deleted folder.
        As result the deleted secureMail is returned.
      operationId: deleteMail
      parameters:
        - name: secureMailId
          in: path
          required: true
          description: the unique identifier of the secureMail
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '204':
          description: securemail deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
  '/securemails/counters':
    get:
      summary: get unread securemails counters
      description: return the number of unread messages. The number can be limited to one folder
      operationId: getCounters
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
        - name: folderId
          in: query
          description: the folder unique identifier
          required: false
          schema:
            $ref: '#/components/schemas/Identifier'
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
  /securemails:
    get:
      summary: Get secure mail filtered by criteria.
      description: >-
        - Returns a list of secure mail.

        **Paging**

        - The list may be continuous or paged. The default is paging starting
        form page 0 and having 10 items per page.

        - If the caller doesn't support paging, the size parameter may be set to
        a value greater than 9999.

        - Paging may be useful to prevent getting too many secure mail.

        - If the number of the page requested exceed the total number of pages,
        the last available page will be returned.

        **Grouping**

        - The secure mail is categorized as OLD if it was read at least once,
        otherwise the scure mail is NEW.
      operationId: getSecureMail
      parameters:
        - name: topicId
          in: query
          description: The unique identifier of the topic. (topic filter)
          required: false
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: direction
          in: query
          description: |
            * **ALL** (default),
            * TOBANK for secure mail sent from the user to the bank,
            * FROMBANK for secure mail the user received from the bank
          schema:
            type: string
            enum:
              - ALL
              - TOBANK
              - FROMBANK
            default: ALL
        - name: folderId
          in: query
          description: >-
            The unique identifier of the folder. (folder filter) All secure mail
            are returned, even from deleted folder
          required: false
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: advisorId
          in: query
          description: >-
            the unique identified of an advisor, if parameter present, only
            secure mail from or to the advisor are selected
          required: false
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: customerId
          in: query
          description: The unique identifier of the customer. (Customer filter)
          required: false
          schema:
            $ref: '#/components/schemas/Identifier'
        - name: startDate
          in: query
          description: >-
            secure mail sent from date and time (included). RFC 3339 date and
            time format.
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: >-
            secure mail sent from date and time (included). RFC 3339 date and
            time format.
          required: false
          schema:
            type: string
            format: date
        - name: group
          in: query
          description: |-
            - **ALL** (default),
            - NEW for unread objects only,
            - OLD for read objects only
          required: false
          schema:
            type: string
            enum:
              - ALL
              - NEW
              - OLD
            default: ALL
        - name: lang
          in: query
          description: >-
            The preferred language of the caller. ISO 639-1 format. If not
            specified the implementation delivers the result in the default
            language of the customer. If the given language is NOT supported the
            implementation delivers the result in the default language.
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: The page number.
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: refObjNo
          in: query
          description: Filter by referenced object number.
          required: false
          schema:
            type: string
        - name: priority
          in: query
          description: true only very secure mail marked as important
          required: false
          schema:
            type: string
            enum:
              - ALL
              - HIGH
              - LOW
            default: ALL
        - name: size
          in: query
          description: The number of secure mail per page.
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: >-
            Filter by subject. The match is done searching the given character
            sequence inside the secure mail subject.
          required: false
          schema:
            type: string
        - name: body
          in: query
          description: >-
            Filter by body. The match is done searching the given character
            sequence inside the secure mail body.
          required: false
          schema:
            type: string
        - name: sortBy
          in: query
          description: sorting criteria in the form 'property:direction'
          required: false
          example: 'sortBy=subject:desc&sortBy=alreadySeen:asc&sortBy=senderName:DESC'
          schema:
            type: array
            items:
              type: string
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecureMailPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
    post:
      summary: create a new secureMail to the bank
      description: Creates a new secureMail to the bank.
      operationId: addNewSecureMail
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: "Request body to create new secureMail"
              type: object
              required:
                - subject
                - body
              properties:
                subject:
                  description: The subject of the secure mail.
                  type: string
                body:
                  description: The text of the secure mail.
                  type: string
                replyId:
                  #description: the unique identifier of the original message.
                  $ref: '#/components/schemas/Identifier'
                topicId:
                  $ref: '#/components/schemas/Identifier'
                receiverId:
                  $ref: '#/components/schemas/Identifier'
                receiverAddress:
                  description: >-
                    Email address of receiver, multiple addresses are possible
                    separated with comma(s). One of the properties receiverId or
                    receiverAddress must be provided, if both are provided
                    receiverAddress will be used for sending secure mail
                  type: string
                senderAddress:
                  description: >-
                    Email address of the sender.
                  type: string
                priority:
                  $ref: '#/components/schemas/PriorityLevel'
                attachments:
                  description: |-
                    the attachments, multiple files or a zip
                    **Note: some mime types may be rejected**
                  type: array
                  items:
                    type: string
                    format: binary
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '201':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecureMailWithMetaData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        default:
          $ref: '#/components/responses/DefaultResponse'
    delete:
      summary: delete multiple securemails
      description: |-
        The secureMails are moved to the folder specified.
        As result returns the moved secureMails list.
      operationId: bulkDelete
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
        - name: secureMailIds
          in: query
          description: a list of securemail identifiers
          required: true
          schema:
            $ref: '#/components/schemas/SecureMailIds'
      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecureMailList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
    put:
      summary: move multiple secureMails to another folder
      description: |-
        The secureMails are moved to the folder specified.
        As result returns the moved secureMails list.
      operationId: bulkMoveMailToFolder
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/BulkMoveToFolder'

      tags:
        - SecureMail
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.write'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecureMailList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /configuration:
    get:
      summary: Get the configuration of a specific tenant.
      description: Returns a set of configuration properties
      operationId: getConfigurationSettings
      parameters:
        - name: tenantId
          in: path
          description: The unique identifier of the tenant.
          required: true
          schema:
            type: string
      tags:
        - Configuration
      security:
        - OIDC:
            - 'https://api.crealogix.com/messages/securemail.read'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MessageConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/DefaultResponse'
components:
  securitySchemes:
    OIDC:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://api.crealogix.com/oauth/authorize'
          scopes:
            'https://api.crealogix.com/messages/securemail.read': View securemail only
            'https://api.crealogix.com/messages/securemail.write': write securemail
  requestBodies:
    UpdateFolder:
      description: DTO to update a folder
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageFolder'
    BulkMoveToFolder:
      description: DTO for bulk move securemails to folder
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MoveSecureMailsToFolder'
    CreateFolderRequestBody:
      description: DTO for creating a new folder
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FolderInfo'
  schemas:
    Identifier:
      description: unique id
      oneOf:
        - type: string
        - type: integer
          format: int64
      example: >-
        __ID__3a0003d2f7ad3775a2b45161e1922a1d980c281ffc6c1061399a7856cbd0eb81ab7662bdaddb98
    AlreadySeen:
      description: Receipt of the document by the receiver.
      type: string
      enum:
        - READ
        - UNREAD
      default: UNREAD
    PriorityLevel:
      description: The secure mail priority
      type: string
      enum:
        - HIGH
        - NORMAL
        - LOW
        - ALL
      default: ALL
    MessageTopicList:
      description: list of message topics
      type: array
      items:
        $ref: '#/components/schemas/MessageTopic'
    MessageTopic:
      description: topics which can be assigned to a secure mail. It is tenant specific
      type: object
      required:
        - id
        - description
        - sortCode
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        description:
          description: folder name
          type: string
        sortCode:
          description: the order of topic
          type: string
      example:
        description: Sundries/general information
        sortCode: '103'
    FolderInfo:
      description: form to create new folder
      type: object
      required:
        - folderName
      properties:
        folderName:
          type: string
    MessageFolderList:
      description: list of message topics
      type: array
      items:
        $ref: '#/components/schemas/MessageFolder'
    MessageFolder:
      description: folder the secure message is located in. It is tenant and user specific
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        name:
          description: folder name
          type: string
        type:
          description: the type of the folder - CUSTOM or STANDARD
          type: string
          enum:
            - CUSTOM
            - STANDARD
          default: CUSTOM
      example:
        name: Inbox
    SecureMailList:
      description: List of secure mail. Search result.
      type: array
      items:
        $ref: '#/components/schemas/SecureMailWithMetaData'
    SecureMailWithMetaData:
      description: The secure mail including meta data is represented by this object.
      type: object
      required:
        - id
        - direction
        - subject
        - body
        - creationDate
        - alreadySeen
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        direction:
          description: |
            * TOBANK for secure mail sent from the user to the bank
            * FROMBANK for secure mail the user received from the bank
          type: string
          enum:
            - TOBANK
            - FROMBANK
        subject:
          description: The subject of the secure mail.
          type: string
        body:
          description: The text of the secure mail.
          type: string
        topicId:
          $ref: '#/components/schemas/Identifier'
        previousMessageId:
          $ref: '#/components/schemas/Identifier'
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        folderId:
          $ref: '#/components/schemas/Identifier'
        senderName:
          description: the name of the sender if available
          type: string
        senderAddress:
          description: the address of the sender if available
          type: string
        receiverName:
          description: the name of the receiver if available
          type: string
        receiverAddress:
          description: the address of the receiver if available
          type: string
        dateSent:
          description: mail sent date in format according to RFC3339
          type: string
          format: date-time
        dateRead:
          description: mail read date in format according to RFC3339
          type: string
          format: date-time
        dateReplied:
          description: mail replied date in format according to RFC3339
          type: string
          format: date-time
        alreadySeen:
          $ref: '#/components/schemas/AlreadySeen'
        priority:
          $ref: '#/components/schemas/PriorityLevel'
        _links:
          $ref: '#/components/schemas/SecureMailLinks'
    SecureMailLinks:
      description: >-
        Links to navigate to other related data in securemail domain. Self -
        self link.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
      example:
        self:
          href: /messaging/documents/CLXN/v1/documents/123456789
    SecureMailPage:
      description: Paging elements for transactions
      type: object
      required:
        - _links
        - page
      properties:
        _embedded:
          $ref: '#/components/schemas/SecureMailList'
        _links:
          $ref: '#/components/schemas/PageLinks'
        page:
          $ref: '#/components/schemas/PageMetadata'
    FileMetadata:
      description: >-
        The file metadata holds the information about a file that may be a
        single document or a message attachment.
      type: object
      required:
        - publishingDate
        - id
        - mimetype
        - name
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        mimetype:
          description: >-
            mimetype of the document. Potential values are documented
            https://www.iana.org/assignments/media-types/media-types.xhtml
          type: string
        name:
          description: name of the file
          type: string
        self:
          $ref: '#/components/schemas/Link'
        publishingDate:
          description: date in format according to RFC3339
          type: string
          format: date-time
        size:
          description: The size of the file in bytes.
          type: integer
          format: int64
    Link:
      description: "DTO to represent a Link"
      type: object
      required:
        - href
      properties:
        href:
          description: >-
            The href attribute specifies the URL of the resource the link goes
            to.
          type: string
          example: /messaging/documents/v1?page=0&size=30
    PageLinks:
      type: object
      description: Links to navigate through the paginated resources.
      properties:
        first:
          $ref: '#/components/schemas/Link'
        last:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
        self:
          $ref: '#/components/schemas/Link'
    PageMetadata:
      description: "DTO used for pagination which contains current page number, total number of pages, page size and total number of elements"
      type: object
      required:
        - number
        - size
        - totalElements
        - totalPages
      properties:
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
    ResponseStatus:
      type: object
      description: Generic response status object
      properties:
        _status:
          type: boolean
          example: false
          description: >-
            Shows if the message was successful or contains errors. This is
            mostly helpful for early processing by javascript clients. Status
            depends also on HTTP-Status codes (HTTP-Code != 2xx = false).
        _messages:
          type: array
          items:
            $ref: '#/components/schemas/StatusMessage'
        _data:
          type: object
          description: >-
            could be any type of data which can be attached to the response
            status
    StatusMessage:
      type: object
      description: Common response message object (Optional for success messages).
      required:
        - category
        - text
      properties:
        category:
          type: string
          description: 'Category, which defines the severity of the message.'
          enum:
            - NORMAL
            - INFO
            - SUCCESS
            - ERROR
            - WARN
          example: INFO
        code:
          type: string
          description: Short Code for the message for machine processing
          example: TRANSACTION_ACCEPTED
        path:
          type: string
          description: >-
            * JSON path for field validation. If not set, the message is a
            global message. If this field is set the text contains the field
            specific message.

            * Elements of the JSON-structure will be separated by "." and arrays
            will be represented with [].
          example: creditor.name
        text:
          type: string
          description: Message as human readable text
          example: Order has been processed.
    SecureMailIds:
      description: a list of securemail identifiers
      type: array
      items:
        $ref: '#/components/schemas/Identifier'
      minItems: 1
      maxItems: 100
    MoveSecureMailsToFolder:
      description: DTO to move multiple messages to the another folder.
      type: object
      required:
        - folderId
        - secureMailIds
      properties:
        folderId:
          $ref: '#/components/schemas/Identifier'
        secureMailIds:
          $ref: '#/components/schemas/SecureMailIds'
    MessageConfig:
      type: object
      description: DTO for the configuration settings
      required:
        - tenantId
      properties:
        tenantId:
          description: the tenant ID
          type: integer
          format: int64
        configuration:
          description: Map containing different type of configuration
          type: string
          additionalProperties:
            type: string
            additionalProperties:
              type: object
    RecipientData:
      type: object
      description: DTO for recipient addresses
      required:
        - email
      properties:
        email:
          description: the email address of the recipient
          type: string
          format: email
        name:
          description: the name of the recipient
          type: string
        role:
          description: the recipient role short description
          type: string

  responses:
    DefaultResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseStatus'
    EntityCreated:
      description: 201 Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseStatus'
    BadRequest:
      description: 400 Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseStatus'
    Unauthorized:
      description: 401 Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseStatus'
    Forbidden:
      description: 403 Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseStatus'
    NotFound:
      description: 404 Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseStatus'
    PayloadTooLarge:
      description: 413 Payload Too Large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseStatus'
    ZipResponse:
      description: OK
      content:
        application/zip:
          schema:
            type: string
            format: binary